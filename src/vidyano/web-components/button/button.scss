@use "sass:color";

@mixin colorizer($bgColor, $fgColor, $bgHoverColor) {
    background-color: $bgColor;
    color: $fgColor;
    fill: $fgColor;
    --vi-spinner-color: #{$fgColor};

    &:not([disabled]):hover {
        background-color: $bgHoverColor;
    }

    &[disabled] {
        background-color: color.adjust($bgColor, $alpha: -0.5) !important;
        fill: color.adjust($fgColor, $alpha: -0.5) !important;
        color: color.adjust($fgColor, $alpha: -0.5) !important;
    }
}

:host {
    display: flex;
    align-items: center;
    justify-content: center;
    contain: content;
    position: relative;
    cursor: pointer;
    transition-property: fill, color, background-color;
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
    border: none;
    outline: none;
    box-sizing: border-box;
    user-select: none;
    --vi-spinner-size: 1.5em;

    /* elevation values from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */
    &[elevation] {
        transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
        will-change: transition;

        &:active {
            box-shadow: none;
        }
    }

    &[elevation="1"] {
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
    }

    &[elevation="2"] {
        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);
    }

    &[elevation="3"] {
        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);
    }

    &[elevation="4"] {
        box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);
    }

    &[elevation="5"] {
        box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);
    }

    &[disabled] {
        cursor: default;
        pointer-events: none;
    }

    &:not([custom-layout]) {
        padding: 1px var(--theme-h5);
        text-align: center;
        white-space: nowrap;
        gap: 2px;

        &[busy] {
            > span, > vi-icon {
                visibility: hidden;
            }
        }
    }

    &[type=""]:not([inverse]), &:not([type]):not([inverse]) {
        background-color: var(--color);
        color: white;
        fill: white;
        --vi-spinner-color: white;

        &:not([disabled]):hover {
            background-color: var(--color-light);
        }

        &:not([busy])[disabled] {
            opacity: 0.5;
        }
    }

    &[type=""][inverse], &:not([type])[inverse] {
        background-color: transparent;
        color: var(--color);
        fill: var(--color);
        --vi-spinner-color: var(--color);

        &:not([disabled]):hover {
            background-color: rgba(var(--color-rgb), 0.1);
        }

        &:not([busy])[disabled] {
            opacity: 0.5;
        }
    }

    &[type="light-monochrome"]:not([inverse]) {
        @include colorizer(#f0f0f0, white, color.adjust(#f0f0f0, $lightness: 10%));
    }

    &[type="light-monochrome"][inverse] {
        @include colorizer(transparent, #f0f0f0, color.adjust(#f0f0f0, $alpha: -0.9));
    }

    &[type="danger"]:not([inverse]) {
        @include colorizer(#FF4136, white, color.adjust(#FF4136, $lightness: 10%));
    }

    &[type="danger"][inverse] {
        @include colorizer(transparent, #FF4136, color.adjust(#FF4136, $alpha: -0.9));
    }

    &[type="safe"]:not([inverse]) {
        @include colorizer(#3D9970, white, color.adjust(#3D9970, $lightness: 10%));
    }

    &[type="safe"][inverse] {
        @include colorizer(transparent, #3D9970, color.adjust(#3D9970, $alpha: -0.9));
    }

    &[accent] {
        --color: var(--theme-accent-color);
        --color-light: var(--theme-accent-color-light);
        --color-lighter: var(--theme-accent-color-lighter);
        --color-dark: var(--theme-accent-color-dark);
        --color-darker: var(--theme-accent-color-darker);
        --color-faint: var(--theme-accent-color-faint);
        --color-semi-faint: var(--theme-accent-color-semi-faint);
        --color-rgb: var(--theme-accent-color-rgb);
    }
}

.highlight {
    display: none !important;
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color);
    opacity: 0.1;
}

:host([accent]) paper-ripple {
    color: var(--color);
}